{"version":3,"sources":["components/UserInput.js","components/RowComp.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","onSubmit","style","width","margin","onFinish","values","playersString","window","localStorage","getItem","players","JSON","parse","value","push","key","Date","now","name","address","setItem","stringify","Item","label","rules","required","message","type","htmlType","RowComp","useState","result","setResult","useEffect","a","axios","res","data","total","fetchData","App","storagePlayers","setPlayers","columns","title","dataIndex","render","_","record","className","padding","dataSource","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sUAwDeA,EApDG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAiBnB,OACE,qBACEC,MAAO,CACLC,MAAM,MACNC,OAAQ,QAHZ,SAME,eAAC,IAAD,CACEC,SAtBW,SAACC,GAChB,IAAIC,EAAgBC,OAAOC,aAAaC,QAAQ,WAC5CC,EAAUC,KAAKC,MAAMN,IAAkB,CAAEO,MAAO,IAEpDH,EAAQG,MAAMC,KAAK,CACjBC,IAAKC,KAAKC,MACVC,KAAMb,EAAOa,MAAQ,GACrBC,QAASd,EAAOc,SAAW,KAE7BZ,OAAOC,aAAaY,QAAQ,UAAWT,KAAKU,UAAUX,IACtDV,EAASU,IAaLQ,KAAK,iBAFP,UAIE,cAAC,IAAKI,KAAN,CACEC,MAAM,OACNL,KAAK,OACLM,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,6BAHrC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAKJ,KAAN,CACEC,MAAM,UACNL,KAAK,UACLM,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAKJ,KAAN,UACE,cAAC,IAAD,CAAQK,KAAK,UAAUC,SAAS,SAAhC,4BCzBKC,EApBC,SAAC,GAAiB,IAAfV,EAAc,EAAdA,QACjB,EAA8BW,mBAAS,KAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KAYA,OAXAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACoBC,IAAM,iDAAD,OAAkDhB,EAAlD,aADzB,QACQiB,EADR,QAEUC,MACNL,EAAUI,EAAIC,KAAKC,OAAS,KAHhC,4CADc,uBAAC,WAAD,wBAOdC,KAEC,CAAC,YAGF,8BACIR,KCmEOS,MA3Ef,WACE,IAAMC,EAAiB9B,KAAKC,MAAML,OAAOC,aAAaC,QAAQ,aAAe,CAAEI,MAAO,IACtF,EAAgCiB,mBAASW,GAAzC,mBAAQ/B,EAAR,KAAiBgC,EAAjB,KAWMC,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACX9B,IAAK,QAEP,CACE6B,MAAO,MACPC,UAAW,MACX9B,IAAK,MACL+B,OAAQ,SAACC,EAAGC,GAAJ,OAAe,cAAC,EAAD,CAAS7B,QAAU6B,EAAO7B,YAEnD,CACEyB,MAAO,UACPC,UAAW,UACX9B,IAAK,YA+BT,OACE,sBACEkC,UAAU,MACVhD,MAAO,CACLiD,QAAS,SAHb,UAME,cAAC,EAAD,CAAWlD,SA9BM,SAACU,GACpBgC,EAAWhC,MA8BT,cAAC,IAAD,CACEyC,WAAazC,EAAQG,MACrB8B,QAAUA,QClEHS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c0f4923e.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Input, Form, Button, } from 'antd'\n\nconst UserInput = ({ onSubmit }) => {\n  // const [ form ] = Form.useForm()\n\n  const onFinish = (values) => {\n    let playersString = window.localStorage.getItem('players')\n    let players = JSON.parse(playersString) || { value: [] }\n\n    players.value.push({\n      key: Date.now(),\n      name: values.name || '',\n      address: values.address || ''\n    })\n    window.localStorage.setItem('players', JSON.stringify(players))\n    onSubmit(players)\n    // form.resetFields()\n  }\n\n  return (\n    <div\n      style={{\n        width:'50%',\n        margin: 'auto'\n      }}\n    >\n      <Form \n        onFinish={onFinish}\n        name=\"axie-user-form\"\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[{ required: true, message: 'Please input player name' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Address\"\n          name=\"address\"\n          rules={[{ required: true, message: 'Please input player adrress' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default UserInput","import React, {useState, useEffect,} from 'react'\nimport axios from 'axios'\nconst RowComp = ({ address }) => {\n  const [ result, setResult ] = useState('-')\n  useEffect(() => {\n    async function fetchData() {\n      const res = await axios(`https://lunacia.skymavis.com/game-api/clients/${address}/items/1`);\n      if (res.data) {\n        setResult(res.data.total || '-');\n      }\n    }\n    fetchData()\n  \n  }, ['address']);\n\n  return (\n    <div>\n      { result }\n    </div>\n  )\n}\n\nexport default RowComp\n","import './App.css';\nimport 'antd/dist/antd.css'\nimport React, { useState, useEffect, } from 'react'\nimport axios from 'axios'\n\nimport { Table } from 'antd'\nimport UserInput from './components/UserInput'\nimport RowComp from './components/RowComp';\n\nfunction App() {\n  const storagePlayers = JSON.parse(window.localStorage.getItem('players')) || { value: [] }\n  const [ players, setPlayers ] = useState(storagePlayers)\n\n  const renderSlp = (_, player) => {\n    const fetchData = async () => {\n      const result = await axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`);\n      return result.data.total || 0\n    }\n \n    return fetchData() || 0\n  }\n  \n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'SLP',\n      dataIndex: 'slp',\n      key: 'slp',\n      render: (_, record) => <RowComp address={ record.address }/>\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n    },\n  ];\n\n  // useEffect(() => {\n  //   getSlps()\n  // })\n\n  const handleSubmit = (players) => {\n    setPlayers(players)\n  }\n\n  // const getSlps = () => {\n  //   players.value.forEach(player => {\n  //     if (!player.slp) {\n  //       const res = fetchData(player)\n  //       if (res.data) {\n  //         player.slp = res.data.total\n  //       }\n  //     }\n  //   })\n  //   setPlayers(players)\n  //  }\n\n  // const fetchData = async (player) => {\n  //   const result = await axios(\n  //     `https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`,\n  //   )\n  //   return result.data\n  // }\n\n  return (\n    <div \n      className=\"App\"\n      style={{\n        padding: '100px'\n      }}\n    >\n      <UserInput onSubmit={ handleSubmit }/>\n      <Table \n        dataSource={ players.value }\n        columns={ columns }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}