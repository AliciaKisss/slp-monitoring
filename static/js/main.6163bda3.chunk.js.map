{"version":3,"sources":["components/UserInput.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","onSubmit","onCancel","visible","Form","useForm","form","onFinish","values","playersString","window","localStorage","getItem","players","JSON","parse","value","filter","player","address","length","message","warning","key","Date","now","name","resetFields","title","onOk","getFieldsValue","closable","Item","rules","required","placeholder","App","storagePlayers","useState","setPlayers","playersData","setPlayersData","tableLoading","setTableLoading","isFormVisible","setIsFormVisible","useEffect","loadPlayerData","newPlayersData","a","axios","res","data","client_id","total","claimable_total","last_claimed_item_at","push","id","claimable","lockedSlp","lastClaimedAt","dailyAvg","getDailyAvg","nextClaimDate","getNextClaimDate","moment","forEach","fetchData","lastClaimDate","diff","add","format","getFromPlayersData","ethAddress","dataKey","playerData","numeral","columns","render","_","record","icon","QuestionCircleOutlined","style","color","onConfirm","deletePlayer","type","danger","DeleteOutlined","width","dataIndex","text","firstDigits","substring","lastDigits","newPlayers","p","setItem","stringify","success","className","padding","margin","fontSize","fontWeight","marginBottom","display","flexGrow","size","shape","RedoOutlined","marginRight","onClick","PlusOutlined","cloneDeep","then","catch","err","error","loading","dataSource","scroll","x","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6163bda3.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Input, Form, message, Modal, } from 'antd'\nimport { filter } from 'lodash'\n\nconst UserInput = ({ onSubmit, onCancel, visible }) => {\n  const [ form ] = Form.useForm()\n\n  const onFinish = (values) => {\n    let playersString = window.localStorage.getItem('players')\n    let players = JSON.parse(playersString) || { value: [] }\n\n    const existingPlayer = filter(players.value, (player) => player.address === values.address)\n    if (existingPlayer.length > 0) {\n      message.warning('The address you entered is already in the list');\n      return\n    }\n\n    onSubmit({\n      key: Date.now(),\n      name: values.name || '',\n      address: values.address || ''\n    })\n    form.resetFields()\n  }\n\n  const handleCancel = () => {\n    onCancel()\n  }\n\n  const handleOk = () => {\n    onFinish(form.getFieldsValue())\n  }\n\n  return (\n    <Modal\n      title=\"Add an Isko\"\n      visible={ visible }\n      onOk={ handleOk } \n      onCancel={ handleCancel }\n      closable={ false }\n    >\n      <Form \n        onFinish={ onFinish }\n        name=\"axie-user-form\"\n        form={form}\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: 'Please input player name' }]}\n        >\n          <Input placeholder=\"Name *\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          rules={[{ required: true, message: 'Please input player adrress' }]}\n        >\n          <Input placeholder=\"Etherium address *\"/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default UserInput","import './App.css';\nimport 'antd/dist/antd.css'\nimport React, { useState, useEffect, } from 'react'\nimport { filter, cloneDeep, } from 'lodash'\nimport axios from 'axios'\nimport numeral from 'numeral'\nimport moment from 'moment'\n\nimport { Table, Popconfirm, Button, message, } from 'antd'\nimport { DeleteOutlined, QuestionCircleOutlined, RedoOutlined, PlusOutlined, } from '@ant-design/icons'\n\nimport UserInput from './components/UserInput'\n\nfunction App() {\n  const storagePlayers = JSON.parse(window.localStorage.getItem('players')) || { value: [] }\n  const [ players, setPlayers ] = useState(storagePlayers)\n  const [ playersData, setPlayersData ] = useState([])\n  const [ tableLoading, setTableLoading ] = useState(true)\n  const [ isFormVisible, setIsFormVisible ] = useState(false)\n\n  useEffect(() => {\n    loadPlayerData()\n  }, ['players'])\n\n  const loadPlayerData = () => {\n    let newPlayersData = []\n\n    async function fetchData(player) {\n      try {\n        const res = await axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`)\n        if (res.data) {\n          const {\n            client_id,\n            total,\n            claimable_total,\n            last_claimed_item_at,\n          } = res.data\n          newPlayersData.push({\n            id: client_id,\n            total: total || 0,\n            claimable: claimable_total || 0,\n            lockedSlp: total - claimable_total,\n            lastClaimedAt: last_claimed_item_at,\n            dailyAvg: getDailyAvg(last_claimed_item_at, total),\n            nextClaimDate: getNextClaimDate(last_claimed_item_at)\n          })\n        }\n      } catch (err) {\n        newPlayersData.push({\n          id: `invalid-user-${player.address}`,\n          total: 0,\n          claimable: 0,\n          lockedSlp: 0,\n          lastClaimedAt: moment(),\n          dailyAvg: 0,\n          nextClaimDate: moment()\n        })\n      }\n      setPlayersData(newPlayersData)\n      if (newPlayersData.length === players.value.length) {\n        setTableLoading(false)\n      }\n    }\n    players.value.forEach((player) => {\n      fetchData(player)\n    })\n  }\n\n  const renderAddress = (text) => {\n    const firstDigits = text.substring(0, 6)\n    const lastDigits = text.substring(text.length - 5, text.length)\n    return `${firstDigits}...${lastDigits}`\n  }\n\n  const renderButton = (_, record) => {\n    return (\n      <Popconfirm \n        title={ `Are you sure you want to delete ${record.name}?`}\n        icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\n        onConfirm={ () => deletePlayer(record) }\n      >\n        <Button \n          type=\"link\" \n          danger \n          icon={<DeleteOutlined />} \n        />\n      </Popconfirm>\n    )\n  }\n\n  const getDailyAvg = (lastClaimedAt, total) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    const dateNow = moment()\n    const dateDiff = dateNow.diff(lastClaimDate, 'days')\n\n    return total/dateDiff\n  }\n\n  const getNextClaimDate = (lastClaimedAt) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    return lastClaimDate.add(14, 'days').format('LLL')\n  }\n\n  const getFromPlayersData = (ethAddress, dataKey, format) => {\n    const playerData = filter(playersData, player => player.id === ethAddress)\n    if (playerData.length > 0) {\n      const data = playerData[0][dataKey]\n      switch (format) {\n        case 'number':\n          return numeral(data).format('0,0')\n        case 'date':\n          return moment(new Date(data * 1000)).format('LLL')\n        case 'decimal':\n          return numeral(data).format('0.0')\n        default:\n          return data;\n      }\n    }\n    return '-'\n  }\n\n  const columns = [\n    {\n      title: '',\n      render: renderButton,\n      width: 5,\n      // fixed: 'left',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      // fixed: 'left',\n    },\n    {\n      title: 'Claimed SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'claimable', 'number')}</span>\n    },\n    {\n      title: 'Locked SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lockedSlp', 'number')}</span>\n    },\n    {\n      title: 'Total SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'total', 'number')}</span>\n    },\n    {\n      title: 'Daily Avg',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'dailyAvg', 'decimal')}</span>\n    },\n    {\n      title: 'Last Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lastClaimedAt', 'date')}</span>\n    },\n    {\n      title: 'Next Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'nextClaimDate', 'none')}</span>\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: renderAddress\n    },\n  ]\n\n  const handleSubmit = (player) => {\n    setTableLoading(true)\n    const newPlayersData = cloneDeep(playersData)\n    axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`)\n      .then(res => {\n        const newPlayers = cloneDeep(players)\n        if (res.data) {\n          const {\n            client_id,\n            total,\n            claimable_total,\n            last_claimed_item_at,\n          } = res.data\n          newPlayersData.push({\n            id: client_id,\n            total: total || 0,\n            claimable: claimable_total || 0,\n            lockedSlp: total - claimable_total,\n            lastClaimedAt: last_claimed_item_at,\n            dailyAvg: getDailyAvg(last_claimed_item_at, total),\n            nextClaimDate: getNextClaimDate(last_claimed_item_at)\n          })\n        }\n        setTableLoading(false)\n        setPlayersData(newPlayersData)\n        newPlayers.value.push(player)\n        window.localStorage.setItem('players', JSON.stringify(newPlayers))\n        setPlayers(newPlayers)\n      })\n      .catch(err => {\n        message.error('You entered an invalid etherium address')\n        setTableLoading(false)\n      })\n      setIsFormVisible(false)\n  }\n\n  const deletePlayer = (player) => {\n    const newPlayers = filter(players.value, (p) => p.key !== player.key) \n    const newPlayersData = filter(playersData, p => p.id !== player.address)\n    setPlayers({value: newPlayers})\n    setPlayersData(newPlayersData)\n    window.localStorage.setItem('players', JSON.stringify({value: newPlayers}))\n    message.success(`Successfully deleted ${player.name}`)\n  }\n\n  const handleOpenForm = () => {\n    setIsFormVisible(true)\n  }\n\n  const handleCancelForm = () => {\n    setIsFormVisible(false)\n  }\n\n  const handleReload = () => {\n    const newPlayersData = []\n    setTableLoading(true)\n    setPlayersData(newPlayersData)\n    loadPlayerData()\n  }\n\n  return (\n    <div \n      className=\"SLP_Monitoring_App\"\n      style={{\n        padding: '15px 25px',\n        margin: 'auto'\n      }}\n    >\n      <div\n        style={{\n          fontSize: '1.5em',\n          fontWeight: 'bold',\n          marginBottom: '10px',\n          display: 'flex'\n        }}\n      >\n        <div style={{ flexGrow: '3' }}>SLP Tracker</div>\n        <Button \n          size=\"large\" \n          shape=\"circle\" \n          icon={<RedoOutlined />} \n          style={{ marginRight: '20px' }}\n          onClick={ handleReload }\n        />\n        <Button \n          size=\"large\" \n          type=\"primary\" \n          shape=\"round\" \n          icon={<PlusOutlined />} \n          onClick={ handleOpenForm }\n        >\n          Isko\n        </Button>\n      </div>\n      <UserInput \n        onSubmit={ handleSubmit } \n        visible={ isFormVisible }\n        onCancel={ handleCancelForm }\n      />\n      <Table \n        loading={ tableLoading }\n        dataSource={ players.value }\n        columns={ columns }\n        scroll={{ x: 1300 }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}