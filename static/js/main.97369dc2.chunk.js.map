{"version":3,"sources":["contexts/PlayersContext.js","components/UserInput.js","components/PlayerMonitoringTable.js","components/DataView.js","components/EarningsSummary.js","components/PlayerEarningsTable.js","components/RatesView.js","components/EarningsView.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["PlayersContext","createContext","PlayersContextProvider","props","storagePlayers","JSON","parse","window","localStorage","getItem","value","slpRatePesoStorage","useState","players","setPlayers","playersData","setPlayersData","selectedPlayer","setSelectedPlayer","slpRatePeso","setSlpRatePeso","Provider","children","UserInput","onSubmit","onCancel","visible","useContext","sShare","parseInt","get","managersShare","setManagersShare","isIsko","setIsIsko","Form","useForm","form","onFinish","values","playersString","name","address","type","isko_share","filter","player","length","message","warning","scholarsShare","key","Date","now","resetFields","title","onOk","getFieldsValue","closable","onFieldsChange","getFieldValue","iskosShare","Item","rules","required","initialValue","placeholder","label","Group","buttonStyle","Button","help","min","max","formatter","parser","replace","disabled","Paragraph","Typography","PlayerMonitoringTable","loading","onDelete","onEdit","getFromPlayersData","ethAddress","dataKey","format","playerData","id","toLowerCase","data","numeral","moment","renderAddress","text","firstDigits","substring","lastDigits","copyable","handleEditPlayer","deletePlayer","columns","render","_","record","icon","QuestionCircleOutlined","style","color","onConfirm","danger","DeleteOutlined","EditOutlined","onClick","width","dataIndex","playerType","fontWeight","marginRight","dataSource","scroll","x","Title","DataView","level","EarningsSummary","display","marginBottom","flexWrap","total","forEach","pData","p","iskoSlpShare","getManagersTotalEarnings","isko","getIskosTotalEarnings","PlayerEarningsTable","getIskoShare","iskosSharePercent","iskoShare","getManagerShare","managersSharePrecent","RatesView","editable","onChange","rateText","parseFloat","setItem","EarningsView","TabPane","Tabs","Main","tableLoading","setTableLoading","isFormVisible","setIsFormVisible","useEffect","loadPlayerData","newPlayersData","a","axios","res","client_id","claimable_total","last_claimed_item_at","push","claimable","lockedSlp","lastClaimedAt","dailyAvg","getDailyAvg","nextClaimDate","getNextClaimDate","fetchData","lastClaimDate","dateDiff","diff","add","className","padding","margin","fontSize","flexGrow","size","shape","RedoOutlined","PlusOutlined","cloneDeep","newPlayers","then","pdIndex","findIndex","pIndex","splice","stringify","catch","err","error","defaultActiveKey","tab","success","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97369dc2.chunk.js","sourcesContent":["import React, {\n\tcreateContext,\n\tuseState,\n} from 'react'\n\nexport const PlayersContext = createContext()\n\nexport const  PlayersContextProvider = (props) => {\n  const storagePlayers = JSON.parse(window.localStorage.getItem('players')) || { value: [] }\n\tconst slpRatePesoStorage = window.localStorage.getItem('slpRatePeso') || 1\n  const [ players, setPlayers ] = useState(storagePlayers)\n  const [ playersData, setPlayersData ] = useState([])\n\tconst [ selectedPlayer, setSelectedPlayer ] = useState({})\n  const [ slpRatePeso, setSlpRatePeso ] = useState(slpRatePesoStorage)\n\n  \n\treturn(\n\t\t<PlayersContext.Provider\n\t\t\tvalue={{\n\t\t\t\tplayers,\n        setPlayers,\n        playersData,\n        setPlayersData,\n\t\t\t\tselectedPlayer,\n\t\t\t\tsetSelectedPlayer,\n\t\t\t\tslpRatePeso,\n\t\t\t\tsetSlpRatePeso,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</PlayersContext.Provider>\n\t)\n}\n","import React, { useState, useContext, } from 'react'\n\nimport { Input, Form, message, Modal, Radio, InputNumber, } from 'antd'\nimport { filter, get, } from 'lodash'\nimport { PlayersContext } from '../contexts/PlayersContext'\n\nconst UserInput = ({ onSubmit, onCancel, visible, }) => {\n  const {\n\t\tselectedPlayer,\n\t} = useContext(PlayersContext)\n\n  let sShare = parseInt(get(selectedPlayer, 'isko_share', 0))\n\n  const [ managersShare, setManagersShare ] = useState(100 - sShare)\n  const [ isIsko, setIsIsko ] = useState(get(selectedPlayer, 'type', 'Manager') === 'Isko')\n  const [ form ] = Form.useForm()\n\n  const onFinish = (values) => {\n    let playersString = window.localStorage.getItem('players')\n    let players = JSON.parse(playersString) || { value: [] }\n    const {\n      name,\n      address,\n      type,\n      isko_share,\n    } = values\n\n    if (!selectedPlayer.name) {\n      const existingPlayer = filter(players.value, (player) => player.address === values.address)\n      if (existingPlayer.length > 0) {\n        message.warning('The address you entered is already in the list');\n        return\n      }\n    }\n  \n    const scholarsShare = isko_share === '' ? 0 : parseInt(isko_share)\n    onSubmit({\n      key: Date.now(),\n      name: name || '',\n      address: address || '',\n      type,\n      isko_share: scholarsShare\n    })\n    form.resetFields()\n  }\n\n  const handleCancel = () => {\n    onCancel()\n  }\n\n  const handleOk = () => {\n    onFinish(form.getFieldsValue())\n  }\n\n  const handleFieldsChange = () => {\n    const values = form.getFieldValue()\n    const {\n      isko_share,\n      type\n    } = values\n\n    setIsIsko(type === 'Isko')\n\n    let iskosShare = isko_share === '' ? 0 : parseInt(isko_share)\n    let managersShare = 100 - iskosShare\n    if (iskosShare > 100) {\n      setManagersShare(0)\n      return\n    }\n    setManagersShare(managersShare)\n  }\n\n  return (\n    <Modal\n      title={ selectedPlayer.name ? 'Edit Player' : 'Add a Player'}\n      visible={ visible }\n      onOk={ handleOk } \n      onCancel={ handleCancel }\n      closable={ false }\n    >\n      <Form \n        onFinish={ onFinish }\n        name=\"axie-user-form\"\n        form={form}\n        onFieldsChange={ handleFieldsChange }\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: 'Please input player name' }]}\n          initialValue={ selectedPlayer.name }\n        >\n          <Input placeholder=\"Name *\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          rules={[{ required: true, message: 'Please input player address' }]}\n          initialValue={ selectedPlayer.address }\n        >\n          <Input placeholder=\"Etherium address *\"/>\n        </Form.Item>\n        <Form.Item \n          label=\"Type\" \n          name=\"type\"\n          initialValue={ get(selectedPlayer, 'type', 'Manager') }\n        >\n          <Radio.Group buttonStyle=\"solid\">\n            <Radio.Button value=\"Isko\">Isko</Radio.Button>\n            <Radio.Button value=\"Manager\">Manager</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        { isIsko &&\n          <Form.Item\n            label=\"Isko's share\"\n            name=\"isko_share\"\n            rules={[{ required: true, message: 'Please input isko\\'s share' }]}\n            initialValue={ get(selectedPlayer, 'isko_share', 60) }\n            help={ `Manager's share is ${managersShare}%` }\n            rules={[{ required: isIsko, message: 'Isko\\'s share is required' }]}\n          >\n            <InputNumber\n              placeholder=\"Isko's share\"\n              min={0}\n              max={100}\n              formatter={value => `${value}%`}\n              parser={value => value.replace('%', '')}\n              disabled={ !isIsko }\n            />\n          </Form.Item>\n        }\n      </Form>\n    </Modal>\n  )\n}\n\nexport default UserInput","import React, { useContext } from 'react'\nimport numeral from 'numeral'\nimport moment from 'moment'\nimport { filter, } from 'lodash'\n\nimport { Table, Popconfirm, Button, Typography, Tag, } from 'antd'\nimport { DeleteOutlined, QuestionCircleOutlined, EditOutlined, } from '@ant-design/icons'\nimport { PlayersContext } from '../contexts/PlayersContext'\n\nconst { Paragraph } = Typography\n\nconst PlayerMonitoringTable = ({ loading, onDelete, onEdit, }) => {\n  const {\n\t\tplayers,\n    playersData,\n\t} = useContext(PlayersContext)\n\n  const getFromPlayersData = (ethAddress, dataKey, format) => {\n    const playerData = filter(playersData, player => player.id.toLowerCase() === ethAddress.toLowerCase())\n    if (playerData.length > 0) {\n      const data = playerData[0][dataKey]\n      switch (format) {\n        case 'number':\n          return numeral(data).format('0,0')\n        case 'date':\n          return moment(new Date(data * 1000)).format('LLL')\n        case 'decimal':\n          return numeral(data).format('0,0.0')\n        default:\n          return data;\n      }\n    }\n    return '-'\n  }\n\n  const renderAddress = (text) => {\n    const firstDigits = text.substring(0, 6)\n    const lastDigits = text.substring(text.length - 5, text.length)\n\n    return <Paragraph copyable={{ text: text.toLowerCase() }}>{ `${firstDigits}...${lastDigits}` }</Paragraph>\n  }\n\n  const renderPlayer = (name, player) => {\n    const {\n      type,\n      isko_share\n    } = player\n\n    let playerType = type || 'Manager'\n    let color = playerType === 'Manager' ? 'gold' : 'cyan'\n    return (\n      <div>\n        <div>\n          <span style={{ fontWeight: 'bold', marginRight: '10px' }}>{ name }</span>\n          <Tag color={ color }>{ playerType }</Tag>\n        </div>\n        <div>{ renderAddress(player.address) }</div>\n        { playerType === 'Isko' &&\n          `${isko_share} / ${100 - isko_share}`\n        }\n      </div>\n    )\n  }\n\n  const renderButton = (_, record) => {\n    return (\n      <div>\n        <Popconfirm \n          title={ `Are you sure you want to delete ${record.name}?`}\n          icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\n          onConfirm={ () => deletePlayer(record) }\n        >\n          <Button \n            type=\"link\" \n            danger \n            icon={<DeleteOutlined />} \n          />\n        </Popconfirm>\n        <Button \n          type=\"link\" \n          icon={<EditOutlined />} \n          onClick={ () => handleEditPlayer(record) }\n        />\n      </div>\n    )\n  }\n\n  const handleEditPlayer = (player) => {\n    onEdit(player)\n  }\n\n  const deletePlayer = (player) => {\n    onDelete(player)\n  }\n\n  const columns = [\n    {\n      title: '',\n      render: renderButton,\n      width: 5,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      render: renderPlayer\n    },\n    {\n      title: 'Claimed SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'claimable', 'number')}</span>\n    },\n    {\n      title: 'Locked SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lockedSlp', 'number')}</span>\n    },\n    {\n      title: 'Total SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'total', 'number')}</span>\n    },\n    {\n      title: 'Daily Avg',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'dailyAvg', 'decimal')}</span>\n    },\n    {\n      title: 'Last Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lastClaimedAt', 'date')}</span>\n    },\n    {\n      title: 'Next Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'nextClaimDate', 'none')}</span>\n    },\n  ]\n\n  return (\n    <Table \n      loading={ loading }\n      dataSource={ players.value }\n      columns={ columns }\n      scroll={{ x: 1300 }}\n    />\n  )\n}\n\nexport default PlayerMonitoringTable","import React from 'react'\nimport { Typography } from 'antd'\n\nconst { Title } = Typography\n\nexport default DataView = ({ value, title, style = {}, }) => {\n  return (\n    <div style={{...style}}>\n      <div style={{ marginRight: '30px', color: 'gray' }}>{ title }</div>\n      <Title level={4}>\n        { value }\n      </Title>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { filter } from 'lodash'\nimport numeral from 'numeral'\n\nimport { PlayersContext } from '../contexts/PlayersContext'\nimport DataView from './DataView'\n\nconst EarningsSummary = () => {\n  const {\n\t\tplayers,\n    playersData,\n    slpRatePeso,\n\t} = useContext(PlayersContext)\n\n  const getIskosTotalEarnings = () => {\n    let total = 0\n    const iskos = filter(players.value, { type: 'Isko' })\n    iskos.forEach(isko => {\n      const { isko_share, address } = isko\n      const pData = filter(playersData, p => p.id.toLowerCase() === address.toLowerCase())\n      if (pData.length > 0) {\n        const iskoSlpShare = pData[0].total * (isko_share / 100)\n        total += iskoSlpShare * slpRatePeso\n      }\n    })\n    return `PHP ${numeral(total).format('0,0.00')}`\n  }\n\n  const getManagersTotalEarnings = () => {\n    let total = 0\n    players.value.forEach(player => {\n      const { address, type, isko_share, } = player\n      const pData = filter(playersData, p => p.id.toLowerCase() === address.toLowerCase())\n      if (pData.length > 0) {\n        if (type === 'Isko') {\n          const iskoSlpShare = pData[0].total * (isko_share / 100)\n          total += iskoSlpShare * slpRatePeso\n        } else {\n          total += pData[0].total * slpRatePeso\n        }\n      }\n    })\n    return `PHP ${numeral(total).format('0,0.00')}`\n  }\n\n  return (\n    <div style={{ display: 'flex', marginBottom: '15px', flexWrap: 'wrap' }}>\n      <DataView \n        title=\"Manager's Total Earnings\"\n        value={ getManagersTotalEarnings() }\n        style={{ marginRight: '20px' }}\n      />\n      <DataView \n        title=\"Ikos' Total Earnings\"\n        value={ getIskosTotalEarnings() }\n      />\n    </div>\n  )\n}\n\nexport default EarningsSummary","import React, { useContext, } from 'react'\nimport moment from 'moment'\nimport numeral from 'numeral'\nimport { filter, get, } from 'lodash'\n\nimport { Table, Typography, Tag, } from 'antd'\nimport { PlayersContext } from '../contexts/PlayersContext'\n\nconst { Paragraph } = Typography\nconst PlayerEarningsTable = () => {\n  const {\n\t\tplayers,\n    playersData,\n    slpRatePeso,\n\t} = useContext(PlayersContext)\n\n  const renderAddress = (text) => {\n    const firstDigits = text.substring(0, 6)\n    const lastDigits = text.substring(text.length - 5, text.length)\n\n    return <Paragraph copyable={{ text: text.toLowerCase() }}>{ `${firstDigits}...${lastDigits}` }</Paragraph>\n  }\n\n  const renderPlayer = (name, player) => {\n    const {\n      type,\n      isko_share\n    } = player\n\n    let playerType = type || 'Manager'\n    let color = playerType === 'Manager' ? 'gold' : 'cyan'\n    return (\n      <div>\n        <div>\n          <span style={{ fontWeight: 'bold', marginRight: '10px' }}>{ name }</span>\n          <Tag color={ color }>{ playerType }</Tag>\n        </div>\n        {/* <div>{ renderAddress(player.address) }</div> */}\n        { playerType === 'Isko' &&\n          `${isko_share} / ${100 - isko_share}`\n        }\n      </div>\n    )\n  }\n\n  const getFromPlayersData = (ethAddress, dataKey, format) => {\n    const playerData = filter(playersData, player => player.id.toLowerCase() === ethAddress.toLowerCase())\n    if (playerData.length > 0) {\n      const data = playerData[0][dataKey]\n      switch (format) {\n        case 'number':\n          return numeral(data).format('0,0')\n        case 'date':\n          return moment(new Date(data * 1000)).format('LLL')\n        case 'decimal':\n          return numeral(data).format('0.0')\n        default:\n          return data;\n      }\n    }\n    return '-'\n  }\n\n  const getIskoShare = (player) => {\n    if (playersData) {\n      const playerData = filter(playersData, p => p.id.toLowerCase() === player.address.toLowerCase())[0]\n      if (playerData && player) {\n        const iskosSharePercent = get(player, 'isko_share', 0)\n        let iskoShare = 0\n        if (iskosSharePercent !== 0) {\n          iskoShare = (playerData.total * ( iskosSharePercent/100 )) * slpRatePeso\n        }\n        return numeral(iskoShare).format('0,0.00')\n      }\n    }\n    return '-'\n  }\n\n  const getManagerShare = (player) => {\n    if (playersData) {\n      const playerData = filter(playersData, p => p.id.toLowerCase() === player.address.toLowerCase())[0]\n      if (playerData && player) {\n        const iskosSharePercent = get(player, 'isko_share', 0)\n        const managersSharePrecent = 100 - iskosSharePercent\n        let managersShare = playerData.total * slpRatePeso\n        if (iskosSharePercent !== 0) {\n          managersShare = (playerData.total * ( managersSharePrecent/100 )) * slpRatePeso\n        }\n        return numeral(managersShare).format('0,0.00')\n        \n      }\n    }\n    return '-'\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      render: renderPlayer\n    },\n    {\n      title: 'SLP Earned',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'total', 'number')}</span>\n    },\n    {\n      title: 'Isko\\'s Share (Peso)',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      render: (_, record) => <span>{getIskoShare(record)}</span>\n    },\n    {\n      title: 'Manager\\'s Share (Peso)',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      render: (_, record) => <span>{getManagerShare(record)}</span>\n    },\n  ]\n\n  return (\n    <Table \n      scroll={{ x: 700 }}\n      dataSource={ players.value }\n      columns={ columns }\n    />\n  )\n}\n\nexport default PlayerEarningsTable","import React, { useState, useContext, } from 'react'\nimport { Card, Typography } from 'antd'\nimport numeral from 'numeral'\nimport { PlayersContext } from '../contexts/PlayersContext'\n\nconst { Paragraph, Title, } = Typography\n\nconst RatesView = () => {\n  const {\n\t\tslpRatePeso,\n    setSlpRatePeso,\n\t} = useContext(PlayersContext)\n\n  const updateSlpRatePeso = (rateText) => {\n    if (rateText !== '') {\n      setSlpRatePeso(parseFloat(rateText))\n      window.localStorage.setItem('slpRatePeso', parseInt(rateText))\n    }\n  }\n\n  return (\n    <div style={{ marginBottom: '10px' }}>\n      <div>\n        <div style={{ marginRight: '30px', color: 'gray' }}>SLP Rate in Peso</div>\n        <Title level={4}>\n          <Paragraph \n            editable={{ onChange: updateSlpRatePeso }}\n          >\n            { numeral(slpRatePeso).format('0,0.00') }\n          </Paragraph>\n        </Title>\n      </div>\n    </div>\n  )\n}\nexport default RatesView","import React from 'react'\nimport EarningsSummary from './EarningsSummary'\nimport PlayerEarningsTable from './PlayerEarningsTable'\nimport RatesView from './RatesView'\n\nconst EarningsView = () => {\n  return (\n    <div>\n      <RatesView />\n      <EarningsSummary />\n      <PlayerEarningsTable />\n    </div>\n  )\n}\n\nexport default EarningsView","import React, { useState, useEffect, useContext, } from 'react'\nimport { cloneDeep, filter, findIndex, remove, } from 'lodash'\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport { Button, message, Tabs, } from 'antd'\nimport { RedoOutlined, PlusOutlined, } from '@ant-design/icons'\n\nimport UserInput from './UserInput'\nimport PlayerMonitoringTable from './PlayerMonitoringTable'\nimport EarningsView from './EarningsView';\nimport { PlayersContext } from '../contexts/PlayersContext'\n\nconst { TabPane } = Tabs\n\nfunction Main() {\n  const {\n\t\tplayers,\n    setPlayers,\n    playersData,\n    setPlayersData,\n    selectedPlayer,\n    setSelectedPlayer,\n\t} = useContext(PlayersContext)\n  const [ tableLoading, setTableLoading ] = useState(true)\n  const [ isFormVisible, setIsFormVisible ] = useState(false)\n\n  useEffect(() => {\n    loadPlayerData()\n  }, [])\n\n  const loadPlayerData = () => {\n    let newPlayersData = []\n\n    async function fetchData(player) {\n      try {\n        const res = await axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`)\n        if (res.data) {\n          const {\n            client_id,\n            total,\n            claimable_total,\n            last_claimed_item_at,\n          } = res.data\n          newPlayersData.push({\n            id: client_id,\n            total: total || 0,\n            claimable: claimable_total || 0,\n            lockedSlp: total - claimable_total,\n            lastClaimedAt: last_claimed_item_at,\n            dailyAvg: getDailyAvg(last_claimed_item_at, total),\n            nextClaimDate: getNextClaimDate(last_claimed_item_at)\n          })\n        }\n      } catch (err) {\n        newPlayersData.push({\n          id: `invalid-user-${player.address}`,\n          total: 0,\n          claimable: 0,\n          lockedSlp: 0,\n          lastClaimedAt: moment(),\n          dailyAvg: 0,\n          nextClaimDate: moment()\n        })\n      }\n      setPlayersData(newPlayersData)\n      if (newPlayersData.length === players.value.length) {\n        setTableLoading(false)\n      }\n    }\n\n    if (players.value.length < 1) {\n      setTableLoading(false)\n      return\n    }\n    players.value.forEach((player) => {\n      fetchData(player)\n    })\n  }\n\n  const getDailyAvg = (lastClaimedAt, total) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    const dateNow = moment()\n    const dateDiff = dateNow.diff(lastClaimDate, 'days')\n    if (dateDiff < 1) {\n      return total\n    }\n\n    return total/dateDiff\n  }\n\n  const getNextClaimDate = (lastClaimedAt) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    return lastClaimDate.add(14, 'days').format('LLL')\n  }\n\n  const handleDeletePlayer = (player) => {\n    const newPlayers = filter(players.value, (p) => p.key !== player.key) \n    const newPlayersData = filter(playersData, p => p.id !== player.address)\n    setPlayers({value: newPlayers})\n    setPlayersData(newPlayersData)\n    window.localStorage.setItem('players', JSON.stringify({value: newPlayers}))\n    message.success(`Successfully deleted ${player.name}`)\n  }\n\n  const handleEditPlayer = (player) => {\n    setIsFormVisible(true)\n    setSelectedPlayer(player)\n  }\n\n  const handleSubmit = (player) => {\n    setTableLoading(true)\n    const newPlayersData = cloneDeep(playersData)\n    const newPlayers = cloneDeep(players)\n\n    axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`)\n      .then(res => {\n        if (res.data) {\n          const {\n            client_id,\n            total,\n            claimable_total,\n            last_claimed_item_at,\n          } = res.data\n          const playerData = {\n            id: client_id,\n            total: total || 0,\n            claimable: claimable_total || 0,\n            lockedSlp: total - claimable_total,\n            lastClaimedAt: last_claimed_item_at,\n            dailyAvg: getDailyAvg(last_claimed_item_at, total),\n            nextClaimDate: getNextClaimDate(last_claimed_item_at)\n          }\n\n          if (selectedPlayer.name) {\n            let pdIndex = findIndex(newPlayersData, player => {\n              return player.id.toLowerCase() === selectedPlayer.address.toLowerCase()\n            })\n            let pIndex = findIndex(newPlayers.value, player => {\n              return player.address.toLowerCase() === selectedPlayer.address.toLowerCase()\n            })\n            if (pdIndex !== -1 && pIndex !== -1) {\n              // remove(newPlayers.value, player => \n              //   player.address.toLowerCase() === selectedPlayer.address.toLowerCase()\n              // )\n              newPlayersData.splice(pdIndex, 1, playerData)\n              newPlayers.value.splice(pIndex, 1, player)\n            }\n          } else {\n            newPlayersData.push(playerData)\n            newPlayers.value.push(player)\n          }\n        }\n        setTableLoading(false)\n        setPlayersData(newPlayersData)\n        window.localStorage.setItem('players', JSON.stringify(newPlayers))\n        setPlayers(newPlayers)\n      })\n      .catch(err => {\n        message.error('You entered an invalid etherium address')\n        setTableLoading(false)\n      })\n      setIsFormVisible(false)\n  }\n\n  const handleOpenForm = () => {\n    setIsFormVisible(true)\n    setSelectedPlayer({})\n  }\n\n  const handleCancelForm = () => {\n    setIsFormVisible(false)\n  }\n\n  const handleReload = () => {\n    const newPlayersData = []\n    setTableLoading(true)\n    setPlayersData(newPlayersData)\n    loadPlayerData()\n  }\n\n  return (\n    <div \n      className=\"SLP_Monitoring_App\"\n      style={{\n        padding: '15px 25px',\n        margin: 'auto'\n      }}\n    >\n      <div\n        style={{\n          fontSize: '1.5em',\n          fontWeight: 'bold',\n          marginBottom: '10px',\n          display: 'flex'\n        }}\n      >\n        <div style={{ flexGrow: '3' }}>SLP Tracker</div>\n        <Button \n          size=\"large\" \n          shape=\"circle\" \n          icon={<RedoOutlined />} \n          style={{ marginRight: '20px' }}\n          onClick={ handleReload }\n        />\n        <Button \n          size=\"large\" \n          type=\"primary\" \n          shape=\"round\" \n          icon={<PlusOutlined />} \n          onClick={ handleOpenForm }\n        >\n          Player\n        </Button>\n      </div>\n      { isFormVisible &&\n        <UserInput \n          onSubmit={ handleSubmit } \n          visible={ true }\n          onCancel={ handleCancelForm }\n          selectedPlayer={ selectedPlayer }\n        />\n      }\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Monitoring\" key=\"1\">\n          <PlayerMonitoringTable \n            loading={ tableLoading }\n            onDelete={ handleDeletePlayer }\n            onEdit={ handleEditPlayer }\n          />\n        </TabPane>\n        <TabPane tab=\"Estimate Earnings\" key=\"2\">\n          <EarningsView />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default Main;\n","import './App.css';\nimport 'antd/dist/antd.css'\nimport React from 'react'\nimport Main from './components/Main'\nimport { PlayersContextProvider } from './contexts/PlayersContext';\n\n\nfunction App() {\n  return (\n    <PlayersContextProvider>\n      <Main />\n    </PlayersContextProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}