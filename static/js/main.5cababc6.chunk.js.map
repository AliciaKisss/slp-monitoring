{"version":3,"sources":["components/UserInput.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","onSubmit","style","margin","backgroundColor","borderRadius","padding","marginBottom","maxWidth","onFinish","values","playersString","window","localStorage","getItem","players","JSON","parse","value","filter","player","address","length","message","warning","push","key","Date","now","name","setItem","stringify","Item","rules","required","placeholder","type","htmlType","App","storagePlayers","useState","setPlayers","playersData","setPlayersData","tableLoading","setTableLoading","useEffect","a","axios","res","data","console","log","newPlayersData","client_id","total","claimable_total","last_claimed_item_at","id","claimable","lockedSlp","lastClaimedAt","dailyAvg","getDailyAvg","nextClaimDate","getNextClaimDate","forEach","fetchData","lastClaimDate","moment","diff","add","format","getFromPlayersData","ethAddress","dataKey","playerData","numeral","columns","title","render","_","record","icon","QuestionCircleOutlined","color","onConfirm","deletePlayer","danger","DeleteOutlined","width","dataIndex","text","firstDigits","substring","lastDigits","newPlayers","p","success","className","textAlign","fontSize","fontWeight","loading","dataSource","scroll","x","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cababc6.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Input, Form, Button, message, } from 'antd'\nimport { filter } from 'lodash'\n\nconst UserInput = ({ onSubmit }) => {\n  // const [ form ] = Form.useForm()\n\n  const onFinish = (values) => {\n    let playersString = window.localStorage.getItem('players')\n    let players = JSON.parse(playersString) || { value: [] }\n\n    const existingPlayer = filter(players.value, (player) => player.address === values.address)\n    if (existingPlayer.length > 0) {\n      message.warning('The address you entered is already in the list');\n      return\n    }\n\n    players.value.push({\n      key: Date.now(),\n      name: values.name || '',\n      address: values.address || ''\n    })\n    window.localStorage.setItem('players', JSON.stringify(players))\n    onSubmit(players)\n    // form.resetFields()\n  }\n\n  return (\n    <div\n      style={{\n        margin: 'auto',\n        backgroundColor: '#24283512',\n        borderRadius: '15px',\n        padding: '25px 25px 1px 25px',\n        marginBottom: '25px',\n        maxWidth: '500px',\n      }}\n    >\n      <Form \n        onFinish={onFinish}\n        name=\"axie-user-form\"\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: 'Please input player name' }]}\n        >\n          <Input placeholder=\"Name *\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          rules={[{ required: true, message: 'Please input player adrress' }]}\n        >\n          <Input placeholder=\"Etherium address *\"/>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default UserInput","import './App.css';\nimport 'antd/dist/antd.css'\nimport React, { useState, useEffect, } from 'react'\nimport { filter } from 'lodash'\nimport axios from 'axios'\nimport numeral from 'numeral'\nimport moment from 'moment'\n\nimport { Table, Popconfirm, Button, message, } from 'antd'\nimport { DeleteOutlined, QuestionCircleOutlined, } from '@ant-design/icons';\n\nimport UserInput from './components/UserInput'\nimport DataRow from './components/DataRow';\n\nfunction App() {\n  const storagePlayers = JSON.parse(window.localStorage.getItem('players')) || { value: [] }\n  const [ players, setPlayers ] = useState(storagePlayers)\n  const [ playersData, setPlayersData ] = useState([])\n  const [ tableLoading, setTableLoading ] = useState(true)\n\n  useEffect(() => {\n    async function fetchData(player) {\n      const res = await axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`);\n      if (res.data) {\n        console.log(playersData)\n        let newPlayersData = playersData\n        const {\n          client_id,\n          total,\n          claimable_total,\n          last_claimed_item_at,\n        } = res.data\n        newPlayersData.push({\n          id: client_id,\n          total: total || 0,\n          claimable: claimable_total || 0,\n          lockedSlp: total - claimable_total,\n          lastClaimedAt: last_claimed_item_at,\n          dailyAvg: getDailyAvg(last_claimed_item_at, total),\n          nextClaimDate: getNextClaimDate(last_claimed_item_at)\n        })\n        setPlayersData(newPlayersData)\n        if (newPlayersData.length === players.value.length) {\n          setTableLoading(false)\n        }\n      }\n    }\n    players.value.forEach((player) => {\n      fetchData(player)\n    })\n  }, ['players'])\n\n  const renderAddress = (text) => {\n    const firstDigits = text.substring(0, 6)\n    const lastDigits = text.substring(text.length - 5, text.length)\n    return `${firstDigits}...${lastDigits}`\n  }\n\n  const renderButton = (_, record) => {\n    return (\n      <Popconfirm \n        title={ `Are you sure you want to delete ${record.name}?`}\n        icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\n        onConfirm={ () => deletePlayer(record) }\n      >\n        <Button \n          type=\"link\" \n          danger \n          icon={<DeleteOutlined />} \n        />\n      </Popconfirm>\n    )\n  }\n\n  const getDailyAvg = (lastClaimedAt, total) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    const dateNow = moment()\n    const dateDiff = dateNow.diff(lastClaimDate, 'days')\n\n    return total/dateDiff\n  }\n\n  const getNextClaimDate = (lastClaimedAt) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    return lastClaimDate.add(14, 'days').format('LLL')\n  }\n\n  const getFromPlayersData = (ethAddress, dataKey, format) => {\n    const playerData = filter(playersData, player => player.id === ethAddress)\n    if (playerData.length > 0) {\n      const data = playerData[0][dataKey]\n      switch (format) {\n        case 'number':\n          return numeral(data).format('0,0')\n        case 'date':\n          return moment(new Date(data * 1000)).format('LLL')\n        case 'decimal':\n          return numeral(data).format('0.0')\n        default:\n          return data;\n      }\n    }\n    return '-'\n  }\n\n  const columns = [\n    {\n      title: '',\n      render: renderButton,\n      width: 5,\n      // fixed: 'left',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      // fixed: 'left',\n    },\n    {\n      title: 'Claimable SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'claimable', 'number')}</span>\n    },\n    {\n      title: 'Locked SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lockedSlp', 'number')}</span>\n    },\n    {\n      title: 'Total SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'total', 'number')}</span>\n    },\n    {\n      title: 'Daily Avg',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'dailyAvg', 'decimal')}</span>\n    },\n    {\n      title: 'Last Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lastClaimedAt', 'date')}</span>\n    },\n    {\n      title: 'Next Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'nextClaimDate', 'none')}</span>\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: renderAddress\n    },\n  ]\n\n  const handleSubmit = (players) => {\n    setPlayers(players)\n  }\n\n  const deletePlayer = (player) => {\n    const newPlayers = filter(players.value, (p) => p.key !== player.key) //players.value.splice(index, 1)\n    setPlayers({value: newPlayers})\n    window.localStorage.setItem('players', JSON.stringify({value: newPlayers}))\n    message.success(`Successfully deleted ${player.name}`);\n  }\n\n  return (\n    <div \n      className=\"SLP_Monitoring_App\"\n      style={{\n        padding: '15px 25px',\n        margin: 'auto'\n      }}\n    >\n      <div\n        style={{\n          textAlign: 'center',\n          fontSize: '1.5em',\n          fontWeight: 'bold',\n          marginBottom: '10px'\n        }}\n      >\n        <span>SLP Tracker</span>\n      </div>\n      <UserInput onSubmit={ handleSubmit }/>\n      <Table \n        loading={ tableLoading }\n        dataSource={ players.value }\n        columns={ columns }\n        scroll={{ x: 1300 }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}