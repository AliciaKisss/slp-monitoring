{"version":3,"sources":["components/UserInput.js","components/DataRow.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","onSubmit","style","margin","backgroundColor","borderRadius","padding","marginBottom","onFinish","values","playersString","window","localStorage","getItem","players","JSON","parse","value","filter","player","address","length","message","warning","push","key","Date","now","name","setItem","stringify","Item","label","rules","required","placeholder","type","htmlType","DataRow","useState","total","setTotal","setClaimable","lastClaimedAt","setLastClaimedAt","useEffect","a","axios","res","data","claimable_total","last_claimed_item_at","fetchData","fontWeight","numeral","format","lastClaimDate","moment","dateDiff","diff","getDailyAvg","App","storagePlayers","setPlayers","columns","title","render","_","record","icon","QuestionCircleOutlined","color","onConfirm","deletePlayer","danger","DeleteOutlined","dataIndex","text","firstDigits","substring","lastDigits","newPlayers","p","success","className","paddingTop","maxWidth","dataSource","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2919c8.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Input, Form, Button, message, } from 'antd'\nimport { filter } from 'lodash'\n\nconst UserInput = ({ onSubmit }) => {\n  // const [ form ] = Form.useForm()\n\n  const onFinish = (values) => {\n    let playersString = window.localStorage.getItem('players')\n    let players = JSON.parse(playersString) || { value: [] }\n\n    const existingPlayer = filter(players.value, (player) => player.address === values.address)\n    if (existingPlayer.length > 0) {\n      message.warning('The address you entered is already in the list');\n      return\n    }\n\n    players.value.push({\n      key: Date.now(),\n      name: values.name || '',\n      address: values.address || ''\n    })\n    window.localStorage.setItem('players', JSON.stringify(players))\n    onSubmit(players)\n    // form.resetFields()\n  }\n\n  return (\n    <div\n      style={{\n        margin: 'auto',\n        backgroundColor: '#24283512',\n        borderRadius: '15px',\n        padding: '25px 25px 1px 25px',\n        marginBottom: '25px'\n      }}\n    >\n      <Form \n        onFinish={onFinish}\n        name=\"axie-user-form\"\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[{ required: true, message: 'Please input player name' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Address\"\n          name=\"address\"\n          rules={[{ required: true, message: 'Please input player adrress' }]}\n        >\n          <Input placeholder=\"Etherium address\"/>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default UserInput","import React, {useState, useEffect,} from 'react'\nimport axios from 'axios'\nimport numeral from 'numeral'\nimport moment from 'moment'\n\nconst DataRow = ({ address }) => {\n  const [ total, setTotal ] = useState(0)\n  const [ claimable, setClaimable ] = useState(0)\n  const [ lastClaimedAt, setLastClaimedAt ] = useState(0)\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await axios(`https://lunacia.skymavis.com/game-api/clients/${address}/items/1`);\n      if (res.data) {\n        setTotal(res.data.total || 0)\n        setClaimable(res.data.claimable_total || 0)\n        setLastClaimedAt(res.data.last_claimed_item_at || Date.now())\n      }\n    }\n    fetchData()\n  \n  }, ['address'])\n\n  const getDailyAvg = () => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    const dateNow = moment()\n    const dateDiff = dateNow.diff(lastClaimDate, 'days')\n\n    return numeral(total/dateDiff).format('0.0')\n  }\n\n  return (\n    <div>\n      <div>\n        <span style={{ fontWeight: 'bold' }}>Total SLP:&nbsp;</span>\n        <span>{ numeral(total).format('0,0') }</span>\n      </div>\n      {/* <div>\n        <span style={{ fontWeight: 'bold' }}>Claimable SLP:&nbsp;</span>\n        <span>{ numeral(claimable).format('0,0') }</span>\n      </div> */}\n      <div>\n        <span style={{ fontWeight: 'bold' }}>Daily Avg:&nbsp;</span>\n        <span>{ getDailyAvg() }</span>\n      </div>\n    </div>\n  )\n}\n\nexport default DataRow\n","import './App.css';\nimport 'antd/dist/antd.css'\nimport React, { useState, } from 'react'\nimport { filter } from 'lodash'\n\nimport { Table, Popconfirm, Button, message, } from 'antd'\nimport { DeleteOutlined, QuestionCircleOutlined, } from '@ant-design/icons';\n\nimport UserInput from './components/UserInput'\nimport DataRow from './components/DataRow';\n\nfunction App() {\n  const storagePlayers = JSON.parse(window.localStorage.getItem('players')) || { value: [] }\n  const [ players, setPlayers ] = useState(storagePlayers)\n\n  const renderAddress = (text) => {\n    const firstDigits = text.substring(0, 4)\n    const lastDigits = text.substring(text.length - 5, text.length)\n    return `${firstDigits}...${lastDigits}`\n  }\n\n  const renderButton = (_, record) => {\n    return (\n      <Popconfirm \n        title={ `Are you sure you want to delete ${record.name}?`}\n        icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\n        onConfirm={ () => deletePlayer(record) }\n      >\n        <Button \n          type=\"link\" \n          danger \n          icon={<DeleteOutlined />} \n        />\n      </Popconfirm>\n    )\n  }\n  const columns = [\n    {\n      title: 'Action',\n      render: renderButton,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Player Data',\n      dataIndex: 'slp',\n      key: 'slp',\n      render: (_, record) => <DataRow address={ record.address }/>\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      render: renderAddress\n    },\n  ]\n\n  const handleSubmit = (players) => {\n    setPlayers(players)\n  }\n\n  const deletePlayer = (player) => {\n    const newPlayers = filter(players.value, (p) => p.key !== player.key) //players.value.splice(index, 1)\n    setPlayers({value: newPlayers})\n    window.localStorage.setItem('players', JSON.stringify({value: newPlayers}))\n    message.success(`Successfully deleted ${player.name}`);\n  }\n\n  return (\n    <div \n      className=\"SLP_Monitoring_App\"\n      style={{\n        paddingTop: '40px',\n        maxWidth: '80%',\n        margin: 'auto'\n      }}\n    >\n      <UserInput onSubmit={ handleSubmit }/>\n      <Table \n        dataSource={ players.value }\n        columns={ columns }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}