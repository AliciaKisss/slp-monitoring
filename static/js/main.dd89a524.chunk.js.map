{"version":3,"sources":["components/UserInput.js","components/PlayersTable.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","onSubmit","onCancel","visible","Form","useForm","form","onFinish","values","playersString","window","localStorage","getItem","players","JSON","parse","value","filter","player","address","length","message","warning","key","Date","now","name","resetFields","title","onOk","getFieldsValue","closable","Item","rules","required","placeholder","PlayersTable","loading","onDelete","playersData","getFromPlayersData","ethAddress","dataKey","format","playerData","id","toLowerCase","data","numeral","moment","deletePlayer","columns","render","_","record","icon","QuestionCircleOutlined","style","color","onConfirm","type","danger","DeleteOutlined","width","dataIndex","text","firstDigits","substring","lastDigits","dataSource","scroll","x","App","storagePlayers","useState","setPlayers","setPlayersData","tableLoading","setTableLoading","isFormVisible","setIsFormVisible","useEffect","loadPlayerData","newPlayersData","a","axios","res","client_id","total","claimable_total","last_claimed_item_at","push","claimable","lockedSlp","lastClaimedAt","dailyAvg","getDailyAvg","nextClaimDate","getNextClaimDate","forEach","fetchData","lastClaimDate","dateDiff","diff","add","className","padding","margin","fontSize","fontWeight","marginBottom","display","flexGrow","size","shape","RedoOutlined","marginRight","onClick","PlusOutlined","cloneDeep","then","newPlayers","setItem","stringify","catch","err","error","p","success","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd89a524.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Input, Form, message, Modal, } from 'antd'\nimport { filter } from 'lodash'\n\nconst UserInput = ({ onSubmit, onCancel, visible }) => {\n  const [ form ] = Form.useForm()\n\n  const onFinish = (values) => {\n    let playersString = window.localStorage.getItem('players')\n    let players = JSON.parse(playersString) || { value: [] }\n\n    const existingPlayer = filter(players.value, (player) => player.address === values.address)\n    if (existingPlayer.length > 0) {\n      message.warning('The address you entered is already in the list');\n      return\n    }\n\n    onSubmit({\n      key: Date.now(),\n      name: values.name || '',\n      address: values.address || ''\n    })\n    form.resetFields()\n  }\n\n  const handleCancel = () => {\n    onCancel()\n  }\n\n  const handleOk = () => {\n    onFinish(form.getFieldsValue())\n  }\n\n  return (\n    <Modal\n      title=\"Add an Isko\"\n      visible={ visible }\n      onOk={ handleOk } \n      onCancel={ handleCancel }\n      closable={ false }\n    >\n      <Form \n        onFinish={ onFinish }\n        name=\"axie-user-form\"\n        form={form}\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: 'Please input player name' }]}\n        >\n          <Input placeholder=\"Name *\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          rules={[{ required: true, message: 'Please input player adrress' }]}\n        >\n          <Input placeholder=\"Etherium address *\"/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default UserInput","import React from 'react'\nimport numeral from 'numeral'\nimport moment from 'moment'\nimport { filter, } from 'lodash'\n\nimport { Table, Popconfirm, Button, } from 'antd'\nimport { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons'\n\nconst PlayersTable = ({ loading, players, onDelete, playersData, }) => {\n\n  const getFromPlayersData = (ethAddress, dataKey, format) => {\n    const playerData = filter(playersData, player => player.id.toLowerCase() === ethAddress.toLowerCase())\n    if (playerData.length > 0) {\n      const data = playerData[0][dataKey]\n      switch (format) {\n        case 'number':\n          return numeral(data).format('0,0')\n        case 'date':\n          return moment(new Date(data * 1000)).format('LLL')\n        case 'decimal':\n          return numeral(data).format('0.0')\n        default:\n          return data;\n      }\n    }\n    return '-'\n  }\n\n  const renderAddress = (text) => {\n    const firstDigits = text.substring(0, 6)\n    const lastDigits = text.substring(text.length - 5, text.length)\n    return `${firstDigits}...${lastDigits}`\n  }\n\n  const renderButton = (_, record) => {\n    return (\n      <Popconfirm \n        title={ `Are you sure you want to delete ${record.name}?`}\n        icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\n        onConfirm={ () => deletePlayer(record) }\n      >\n        <Button \n          type=\"link\" \n          danger \n          icon={<DeleteOutlined />} \n        />\n      </Popconfirm>\n    )\n  }\n\n  const deletePlayer = (player) => {\n    onDelete(player)\n  }\n\n  const columns = [\n    {\n      title: '',\n      render: renderButton,\n      width: 5,\n      // fixed: 'left',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      // fixed: 'left',\n    },\n    {\n      title: 'Claimed SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'claimable', 'number')}</span>\n    },\n    {\n      title: 'Locked SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lockedSlp', 'number')}</span>\n    },\n    {\n      title: 'Total SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'total', 'number')}</span>\n    },\n    {\n      title: 'Daily Avg',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'dailyAvg', 'decimal')}</span>\n    },\n    {\n      title: 'Last Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lastClaimedAt', 'date')}</span>\n    },\n    {\n      title: 'Next Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'nextClaimDate', 'none')}</span>\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: renderAddress\n    },\n  ]\n\n  return (\n    <Table \n      loading={ loading }\n      dataSource={ players }\n      columns={ columns }\n      scroll={{ x: 1300 }}\n    />\n  )\n}\n\nexport default PlayersTable","import './App.css';\nimport 'antd/dist/antd.css'\nimport React, { useState, useEffect, } from 'react'\nimport { cloneDeep, filter, } from 'lodash'\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport { Button, message, } from 'antd'\nimport { RedoOutlined, PlusOutlined, } from '@ant-design/icons'\n\nimport UserInput from './components/UserInput'\nimport PlayersTable from './components/PlayersTable';\n\nfunction App() {\n  const storagePlayers = JSON.parse(window.localStorage.getItem('players')) || { value: [] }\n  const [ players, setPlayers ] = useState(storagePlayers)\n  const [ playersData, setPlayersData ] = useState([])\n  const [ tableLoading, setTableLoading ] = useState(true)\n  const [ isFormVisible, setIsFormVisible ] = useState(false)\n\n  useEffect(() => {\n    loadPlayerData()\n  }, ['players'])\n\n  const loadPlayerData = () => {\n    let newPlayersData = []\n\n    async function fetchData(player) {\n      try {\n        const res = await axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`)\n        if (res.data) {\n          const {\n            client_id,\n            total,\n            claimable_total,\n            last_claimed_item_at,\n          } = res.data\n          newPlayersData.push({\n            id: client_id,\n            total: total || 0,\n            claimable: claimable_total || 0,\n            lockedSlp: total - claimable_total,\n            lastClaimedAt: last_claimed_item_at,\n            dailyAvg: getDailyAvg(last_claimed_item_at, total),\n            nextClaimDate: getNextClaimDate(last_claimed_item_at)\n          })\n        }\n      } catch (err) {\n        newPlayersData.push({\n          id: `invalid-user-${player.address}`,\n          total: 0,\n          claimable: 0,\n          lockedSlp: 0,\n          lastClaimedAt: moment(),\n          dailyAvg: 0,\n          nextClaimDate: moment()\n        })\n      }\n      setPlayersData(newPlayersData)\n      if (newPlayersData.length === players.value.length) {\n        setTableLoading(false)\n      }\n    }\n\n    if (players.value.length < 1) {\n      setTableLoading(false)\n      return\n    }\n    players.value.forEach((player) => {\n      fetchData(player)\n    })\n  }\n\n  const getDailyAvg = (lastClaimedAt, total) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    const dateNow = moment()\n    const dateDiff = dateNow.diff(lastClaimDate, 'days')\n    if (dateDiff < 1) {\n      return total\n    }\n\n    return total/dateDiff\n  }\n\n  const getNextClaimDate = (lastClaimedAt) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    return lastClaimDate.add(14, 'days').format('LLL')\n  }\n\n  const handleDeletePlayer = (player) => {\n    const newPlayers = filter(players.value, (p) => p.key !== player.key) \n    const newPlayersData = filter(playersData, p => p.id !== player.address)\n    setPlayers({value: newPlayers})\n    setPlayersData(newPlayersData)\n    window.localStorage.setItem('players', JSON.stringify({value: newPlayers}))\n    message.success(`Successfully deleted ${player.name}`)\n  }\n\n  const handleSubmit = (player) => {\n    setTableLoading(true)\n    const newPlayersData = cloneDeep(playersData)\n    axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`)\n      .then(res => {\n        const newPlayers = cloneDeep(players)\n        if (res.data) {\n          const {\n            client_id,\n            total,\n            claimable_total,\n            last_claimed_item_at,\n          } = res.data\n          newPlayersData.push({\n            id: client_id,\n            total: total || 0,\n            claimable: claimable_total || 0,\n            lockedSlp: total - claimable_total,\n            lastClaimedAt: last_claimed_item_at,\n            dailyAvg: getDailyAvg(last_claimed_item_at, total),\n            nextClaimDate: getNextClaimDate(last_claimed_item_at)\n          })\n        }\n        setTableLoading(false)\n        setPlayersData(newPlayersData)\n        newPlayers.value.push(player)\n        window.localStorage.setItem('players', JSON.stringify(newPlayers))\n        setPlayers(newPlayers)\n      })\n      .catch(err => {\n        message.error('You entered an invalid etherium address')\n        setTableLoading(false)\n      })\n      setIsFormVisible(false)\n  }\n\n  const handleOpenForm = () => {\n    setIsFormVisible(true)\n  }\n\n  const handleCancelForm = () => {\n    setIsFormVisible(false)\n  }\n\n  const handleReload = () => {\n    const newPlayersData = []\n    setTableLoading(true)\n    setPlayersData(newPlayersData)\n    loadPlayerData()\n  }\n\n  return (\n    <div \n      className=\"SLP_Monitoring_App\"\n      style={{\n        padding: '15px 25px',\n        margin: 'auto'\n      }}\n    >\n      <div\n        style={{\n          fontSize: '1.5em',\n          fontWeight: 'bold',\n          marginBottom: '10px',\n          display: 'flex'\n        }}\n      >\n        <div style={{ flexGrow: '3' }}>SLP Tracker</div>\n        <Button \n          size=\"large\" \n          shape=\"circle\" \n          icon={<RedoOutlined />} \n          style={{ marginRight: '20px' }}\n          onClick={ handleReload }\n        />\n        <Button \n          size=\"large\" \n          type=\"primary\" \n          shape=\"round\" \n          icon={<PlusOutlined />} \n          onClick={ handleOpenForm }\n        >\n          Isko\n        </Button>\n      </div>\n      <UserInput \n        onSubmit={ handleSubmit } \n        visible={ isFormVisible }\n        onCancel={ handleCancelForm }\n      />\n      <PlayersTable \n        loading={ tableLoading }\n        players={ players.value }\n        onDelete={ handleDeletePlayer }\n        playersData={ playersData }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}